#!/bin/bash

# Script de despliegue para el servidor de producción
# IMPORTANTE: No reiniciar el servidor ni afectar el servicio de Labsis en puerto 8080

echo "========================================="
echo "DESPLIEGUE DE TOMA-TURNO-MODERNO v1.0"
echo "Servidor: 192.168.2.190"
echo "Puerto destino: 3000"
echo "========================================="
echo ""
echo "INSTRUCCIONES PARA CONECTARTE Y DESPLEGAR:"
echo ""
echo "1. CONECTAR AL SERVIDOR:"
echo "   ssh -p 2278 dynamtek@192.168.2.190"
echo "   Password: dyn@mt3k"
echo ""
echo "2. NAVEGAR A LA CARPETA DEL PROYECTO:"
echo "   cd /home/dynamtek/toma-turno-moderno"
echo ""
echo "3. VERIFICAR QUE EL PUERTO 3000 ESTÉ LIBRE:"
echo "   sudo lsof -i :3000"
echo "   # Si hay algo corriendo, detenerlo con:"
echo "   # sudo kill -9 [PID]"
echo ""
echo "4. DESCARGAR LA VERSIÓN PRODUCCION250814:"
echo "   # Hacer backup si existe versión anterior"
echo "   if [ -d '/home/dynamtek/toma-turno-moderno' ]; then"
echo "     mv /home/dynamtek/toma-turno-moderno /home/dynamtek/toma-turno-moderno.backup.\$(date +%Y%m%d_%H%M%S)"
echo "   fi"
echo ""
echo "   # Clonar el repositorio con el tag específico"
echo "   cd /home/dynamtek"
echo "   git clone --branch Produccion250814 https://github.com/saqh5037/TomaTurnoModerno.git toma-turno-moderno"
echo "   cd toma-turno-moderno"
echo ""
echo "5. INSTALAR DEPENDENCIAS:"
echo "   npm install"
echo ""
echo "6. CONFIGURAR VARIABLES DE ENTORNO:"
echo "   # Crear archivo .env.production"
echo "   cat > .env.production << 'EOL'"
echo "DATABASE_URL=\"postgresql://labsis:labsis@localhost:5432/toma_turno?schema=public\""
echo "JWT_SECRET=\"tu-clave-secreta-aqui\""
echo "NODE_ENV=\"production\""
echo "NEXTAUTH_URL=\"http://192.168.2.190:3000\""
echo "PORT=3000"
echo "EOL"
echo ""
echo "7. CONFIGURAR BASE DE DATOS:"
echo "   # Crear base de datos si no existe"
echo "   sudo -u postgres psql -c \"CREATE DATABASE toma_turno;\""
echo "   sudo -u postgres psql -c \"CREATE USER labsis WITH PASSWORD 'labsis';\""
echo "   sudo -u postgres psql -c \"GRANT ALL PRIVILEGES ON DATABASE toma_turno TO labsis;\""
echo ""
echo "   # Ejecutar migraciones"
echo "   npx prisma migrate deploy"
echo "   npx prisma db seed"
echo ""
echo "8. BUILD DE PRODUCCIÓN:"
echo "   npm run build"
echo ""
echo "9. INICIAR LA APLICACIÓN CON PM2:"
echo "   # Instalar PM2 si no está instalado"
echo "   npm install -g pm2"
echo ""
echo "   # Configurar para que escuche en todas las interfaces (red local)"
echo "   pm2 start npm --name \"toma-turno\" -- start -- --port 3000 --hostname 0.0.0.0"
echo ""
echo "   # Guardar configuración de PM2"
echo "   pm2 save"
echo "   pm2 startup"
echo ""
echo "10. VERIFICAR QUE ESTÉ FUNCIONANDO:"
echo "    # Verificar que el proceso esté corriendo"
echo "    pm2 status"
echo ""
echo "    # Verificar que el puerto esté escuchando"
echo "    sudo netstat -tlnp | grep 3000"
echo ""
echo "    # Probar localmente"
echo "    curl http://localhost:3000/api/health"
echo ""
echo "11. CONFIGURAR FIREWALL (si es necesario):"
echo "    # Permitir el puerto 3000"
echo "    sudo ufw allow 3000"
echo ""
echo "========================================="
echo "IMPORTANTE:"
echo "- NO reiniciar el servidor"
echo "- NO detener el servicio de Labsis (puerto 8080)"
echo "- La aplicación debe ser accesible desde la red local en:"
echo "  http://192.168.2.190:3000"
echo "========================================="
echo ""
echo "COMANDOS ÚTILES DE PM2:"
echo "- Ver logs: pm2 logs toma-turno"
echo "- Reiniciar: pm2 restart toma-turno"
echo "- Detener: pm2 stop toma-turno"
echo "- Eliminar: pm2 delete toma-turno"
echo "========================================="